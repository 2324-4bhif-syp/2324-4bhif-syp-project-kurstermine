###
GET http://localhost:8080/customers
Accept: application/json

###
GET http://localhost:8080/customers/1
Accept: application/json

###
POST http://localhost:8080/customers
Content-Type: application/json

{
  "first_name": "Lukas",
  "last_name": "Sonnleitner",
  "email": "l.sonnleitner@gmail.com",
  "date_of_birth": "2006-02-28"
}

###
PUT http://localhost:8080/customers/1
Content-Type: application/json

{
  "first_name": "Luki",
  "last_name": "Sonni",
  "email": "l.sonni@gmail.com",
  "date_of_birth": "2006-02-28"
}

###
DELETE http://localhost:8080/customers/1


### alice: Authorization by token, part 1. Retrieve and save token.

POST http://localhost:8180/realms/htl/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username=alice&password=alice&grant_type=password&client_id=quarkus-service&client_secret=1f9M7z1QjSfkC5fIjfYNCikO4RU2MCtk

> {%
    client.global.set("access_token", response.body.access_token);
    client.log(client.global.get("access_token"));
%}

### alice: Authorization by token, part 2a. Use token to authorize.

GET localhost:8080/test/admin
Authorization: Bearer {{access_token}}

### alice: Authorization by token, part 2b. Use token to authorize.

GET localhost:8080/test/me
Authorization: Bearer {{access_token}}

###
GET localhost:8080/customers/name
Authorization: Bearer {{access_token}}
Content-Type: */*

###

GET localhost:8080/appointments/customer/5
Authorization: Bearer {{access_token}}
Content-Type: */*

###

### admin: Authorization by token, part 1. Retrieve and save token.

POST http://localhost:8180/realms/htl/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username=admin&password=admin&grant_type=password&client_id=quarkus-service&client_secret=1f9M7z1QjSfkC5fIjfYNCikO4RU2MCtk

> {%
    client.global.set("access_token", response.body.access_token);
%}

### admin: Authorization by token, part 2a. Use token to authorize.

GET localhost:8080/test/admin
Authorization: Bearer {{access_token}}

### admin: Authorization by token, part 2b. Use token to authorize.

GET localhost:8080/test/me
Authorization: Bearer {{access_token}}

###

GET localhost:8080/customers
Authorization: Bearer {{access_token}}

### moritz: Authorization by token, part 1. Retrieve and save token.

POST https://babyapp.ddns.net/keycloak/realms/htl/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username=moritz&password=moritz&grant_type=password&client_id=quarkus-service&client_secret=1f9M7z1QjSfkC5fIjfYNCikO4RU2MCtk

> {%
    client.global.set("access_token", response.body.access_token);
    client.log(client.global.get("access_token"));
%}

### moritz: Authorization by token, part 2a. Use token to authorize.

GET https://babyapp.ddns.net/api/appointments
Authorization: Bearer {{access_token}}


### Category Endpoints
###
GET http://localhost:8080/categories/1
Accept: application/json
Content-Type: */*

###
GET http://localhost:8080/categories/1/Software Development
Accept: application/json
Content-Type: */*

###
POST http://localhost:8080/categories/1
Content-Type: application/json

{
  "name": "NewCategory"
}

###
DELETE http://localhost:8080/categories/4

### Course Endpoints
###
GET http://localhost:8080/courses/2
Accept: application/json
Content-Type: */*

###
GET http://localhost:8080/courses/id/3
Accept: application/json
Content-Type: */*

###
POST http://localhost:8080/courses/1
Content-Type: application/json

{
  "name": "NewCourse"
}

###
DELETE http://localhost:8080/courses/4
